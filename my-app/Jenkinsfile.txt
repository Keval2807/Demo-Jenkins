pipeline {
    agent any
    tools {
        maven "MAVEN"
        jdk "JDK"
    }
    stages {
        stage('Initialize'){
            steps{
                echo "PATH = ${MAVEN_HOME}/bin:${PATH}"
                echo "MAVEN_HOME = /Maven/apache-maven-3.8.7"
            }
        }
        stage('Build') {
            steps {
                dir("C:/ProgramData/Jenkins/.jenkins/workspace/demo-pipeline-task-2/my-app/") {
                bat 'mvn -B -DskipTests clean package'
                }
            }
        }
        stage('SonarQube analysis') {
            steps {
                withSonarQubeEnv('SonarQube 1.0') {
                    dir("C:/ProgramData/Jenkins/.jenkins/workspace/demo-pipeline-task-2/my-app/") {
                        bat 'mvn clean package sonar:sonar' \
                        -D sonar.login=sqa_97eea0a9e438963b470bf2d84640bf4885cc6ff5
                    }
                }
            }
        }
        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }
    post {
       always {
          junit(
        allowEmptyResults: true,
        testResults: '*/test-reports/.xml'
      )
      }
   }
}
